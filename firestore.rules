rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isOneOfRoles(array) {
      return request.auth.token.role in array;
    }

    function isCreating() {
      return resource == null;
    }

    function onlyAffectsFields(fields) {
      return isCreating()
      ? request.resource.data.keys().hasOnly(fields)
      : request.resource.data.diff(resource.data).affectedKeys().hasOnly(fields)
    }

    function myDocument(uid) {
      return request.auth.uid == uid;
    }

    function isAdmin() {
      return isOneOfRoles(['ADMIN', 'MODERATOR', 'SUPER_USER']);
    }

    function myDocumentOrAdmin(uid) {
      return request.auth.uid == uid || isOneOfRoles(['ADMIN', 'MODERATOR', 'SUPER_USER']);
    }

    function myDocumentOrMod(uid) {
      return request.auth.uid == uid || isOneOfRoles(['MODERATOR', 'SUPER_USER']);
    }

    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{uid} {
      allow read;
      allow update: if (myDocument(uid) && onlyAffectsFields(['avatar','displayName']));
      allow update: if (isAdmin() && onlyAffectsFields(['role']));

      match /privateUserData/wallet {
        allow read: if myDocumentOrAdmin(uid);
      }
      match /userHistory/{id} {
        allow read: if myDocumentOrAdmin(uid);
      }
      match /userShares/{id} {
        allow read: if myDocumentOrAdmin(uid);
      }
      match /userTransactions/{id} {
        allow read: if myDocumentOrAdmin(uid);
      }

      // Stripe Extension
      match /payments/{id} {
        allow read: if myDocumentOrAdmin(uid);
        allow update: if (myDocument(uid) && onlyAffectsFields(['id','status']));
      }
      match /payment_methods/{id} {
        allow read: if myDocumentOrAdmin(uid);
        allow create: if (myDocument(uid) && onlyAffectsFields(['id']));
      }
    }

    match /projects/{pid} {
      allow read;
      allow create, update: if isOneOfRoles(['MODERATOR', 'SUPER_USER']);

        match /data/content {
          allow read;
          allow create, update: if isOneOfRoles(['MODERATOR', 'SUPER_USER']);
        }

        // Stripe
        match /prices/{id} {
          allow read;
          allow create, update: if isOneOfRoles(['MODERATOR', 'SUPER_USER']);
        }
        match /tax_rates/{id} {
          allow read;
        }
    }

    match /panels/{sid} {
      allow read;
    }

    match /newsletter/{email} {
    	allow read, create;
    }
  }
}